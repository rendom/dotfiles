# Random conf with stuff stolen from c0r73x :)

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nv

export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.local/share
export XDG_CACHE_HOME=$HOME/.cache
export MPV_HOME=$HOME/.config/mpv

source $HOME/.zsh/autojump
source $HOME/.zsh/functions

export NVM_AUTO_USE=true
export NVM_LAZY_LOAD=true

fpath=(~/.zsh/plugins /usr/local/share/zsh/site-functions $fpath)

if [ -e $HOME/.zsh/local ]; then
	source $HOME/.zsh/local
fi


source $HOME/.zsh/profile

# Plugins
for f in $HOME/.zsh/plugins/*.zsh; do
	source $f;
done

#    ponysay --quote

if [ -e /etc/profile.d/fzf.zsh ]; then
    source /etc/profile.d/fzf.zsh
fi

source $HOME/.zsh/plugins/zgen/zgen.zsh
if ! zgen saved; then
    zgen load zsh-users/zsh-syntax-highlighting
    zgen load trapd00r/zsh-syntax-highlighting-filetypes
    zgen load zsh-users/zsh-autosuggestions
    zgen load tarrasch/zsh-bd
    zgen load felixr/docker-zsh-completion
    # zgen load lukechilds/zsh-nvm
    zgen save
fi


# Add support for tracking time spent in the shell (Timing app)
PROMPT_TITLE='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/~}\007"'
export PROMPT_COMMAND="${PROMPT_COMMAND} ${PROMPT_TITLE}; "

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

source $HOME/.zsh/aliases
#source $HOME/.zsh/style


# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
# 
# # place this after nvm initialization!
# autoload -U add-zsh-hook
# load-nvmrc() {
#   local node_version="$(nvm version)"
#   local nvmrc_path="$(nvm_find_nvmrc)"
# 
#   if [ -n "$nvmrc_path" ]; then
#     local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")
# 
#     if [ "$nvmrc_node_version" = "N/A" ]; then
#       nvm install
#     elif [ "$nvmrc_node_version" != "$node_version" ]; then
#       nvm use
#     fi
#   elif [ "$node_version" != "$(nvm version default)" ]; then
#     echo "Reverting to nvm default version"
#     nvm use default
#   fi
# }
# add-zsh-hook chpwd load-nvmrc
# load-nvmrc
# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

source <(kubectl completion zsh)

# vim: set ft=zsh :

